/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_SLIDECARCOMMAND_PB_H_INCLUDED
#define PB_SLIDECARCOMMAND_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _SlideCarCommandId {
    SlideCarCommandId_NONE = 0,
    SlideCarCommandId_MOVE = 1
} SlideCarCommandId;

typedef enum _SlideCarCommandType {
    SlideCarCommandType_STOP = 0,
    SlideCarCommandType_LEFT = 1,
    SlideCarCommandType_RIGHT = 2
} SlideCarCommandType;

/* Struct definitions */
typedef struct _SlideCarCommand {
    SlideCarCommandId id;
    SlideCarCommandType type;
    uint32_t steps;
} SlideCarCommand;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _SlideCarCommandId_MIN SlideCarCommandId_NONE
#define _SlideCarCommandId_MAX SlideCarCommandId_MOVE
#define _SlideCarCommandId_ARRAYSIZE ((SlideCarCommandId)(SlideCarCommandId_MOVE+1))

#define _SlideCarCommandType_MIN SlideCarCommandType_STOP
#define _SlideCarCommandType_MAX SlideCarCommandType_RIGHT
#define _SlideCarCommandType_ARRAYSIZE ((SlideCarCommandType)(SlideCarCommandType_RIGHT+1))

#define SlideCarCommand_id_ENUMTYPE SlideCarCommandId
#define SlideCarCommand_type_ENUMTYPE SlideCarCommandType


/* Initializer values for message structs */
#define SlideCarCommand_init_default             {_SlideCarCommandId_MIN, _SlideCarCommandType_MIN, 0}
#define SlideCarCommand_init_zero                {_SlideCarCommandId_MIN, _SlideCarCommandType_MIN, 0}

/* Field tags (for use in manual encoding/decoding) */
#define SlideCarCommand_id_tag                   1
#define SlideCarCommand_type_tag                 2
#define SlideCarCommand_steps_tag                3

/* Struct field encoding specification for nanopb */
#define SlideCarCommand_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    id,                1) \
X(a, STATIC,   SINGULAR, UENUM,    type,              2) \
X(a, STATIC,   SINGULAR, UINT32,   steps,             3)
#define SlideCarCommand_CALLBACK NULL
#define SlideCarCommand_DEFAULT NULL

extern const pb_msgdesc_t SlideCarCommand_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define SlideCarCommand_fields &SlideCarCommand_msg

/* Maximum encoded size of messages (where known) */
#define SLIDECARCOMMAND_PB_H_MAX_SIZE            SlideCarCommand_size
#define SlideCarCommand_size                     10

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
